trigger:
- master

variables:
  resource_group_name: 'ApimRG'
  region: 'East US'
  dev_portal_storage_account_name: 'DevPortalSA'
  apim_name: 'TFApim'
  sas_token: $(ARM_SAS_TOKEN)

stages:
- stage: Build
  displayName: 'Build Developer Portal'
  jobs:
  - job: Build
    displayName: 'Build'
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: qetza.replacetokens.replacetokens-task.replacetokens@4
      inputs:
        rootDirectory: '$(System.DefaultWorkingDirectory)/src'
        targetFiles: '**/*.json'
        encoding: 'auto'
        tokenPattern: 'rm'
        writeBOM: true
        escapeType: 'none'
        actionOnMissing: 'warn'
        keepToken: false
        actionOnNoFiles: 'continue'
        enableTransforms: false
        useLegacyPattern: false
        enableTelemetry: true
      displayName: 'Replace Developer Portal Configuration Values'

    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'

    - script: |
        npm install
        npm build
      displayName: 'NPM Install and Build'
      env:
        NODE_OPTIONS: --max_old_space_size=16384
      
    - script: |
        dir
      displayName: 'list cwd contents (verify build)'
- stage: 'Provision'
  displayName: "Terraforming"
  dependsOn: Build
  variables:
    backend_storage_account_name: 'tfstorageaccountapim'
    backend_container_name: 'tfstate'
  jobs:
  - job: Provision
    displayName: 'Provisioning APIM'
    pool:
      vmImage: ubuntu-latest
    variables:
    - group: ApimTFEnvVars
    steps:
    - task: qetza.replacetokens.replacetokens-task.replacetokens@4
      inputs:
        rootDirectory: '$(System.DefaultWorkingDirectory)'
        targetFiles: '**/*.tfvars'
        encoding: 'auto'
        tokenPattern: 'rm'
        writeBOM: true
        escapeType: 'none'
        actionOnMissing: 'warn'
        keepToken: false
        actionOnNoFiles: 'continue'
        enableTransforms: false
        useLegacyPattern: false
        enableTelemetry: true
       
    - task: TerraformInstaller@0
      inputs:
        terraformVersion: '1.0.6'

    - script: |
        set -e

        terraform init -input=false
        terraform apply -input=false -auto-approve
      name: RunTerraform
      env:
        ARM_CLIENT_ID: $(ARM_CLIENT_ID)
        ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
        ARM_TENANT_ID: $(ARM_TENANT_ID)
        ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
        ARM_ACCESS_KEY: $(ARM_ACCESS_KEY)
        ARM_SKIP_PROVIDER_REGISTRATION: true
- stage: 'Deploy'
  displayName: 'Deploying Developer Portal'
  dependsOn: Provision
  jobs:
  - job: 'Deploy'
    steps:
    - task: AzureFileCopy@4
      inputs:
        SourcePath: '$(Build.SourcesDirectory)/dist'
        azureSubscription: USCW - AppMod Practice
        destination: azureBlob
        storage: $(dev_portal_storage_account_name)
        containerName: '$web'
        AdditionalArgumentsForBlobCopy: --recursive=true